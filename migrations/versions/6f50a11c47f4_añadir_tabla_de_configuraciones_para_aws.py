"""AÃ±adir tabla de configuraciones para AWS

Revision ID: 6f50a11c47f4
Revises: 7d3f5904f28a
Create Date: 2025-05-30 22:58:39.844447

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '6f50a11c47f4'
down_revision = '7d3f5904f28a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_encrypted', sa.Boolean(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('app_settings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_app_settings_key'), ['key'], unique=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=mysql.ENUM('PENDING', 'VISITOR', 'JANITOR', 'MODERATOR', 'ADMINISTRATOR'),
               type_=sa.String(length=20),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.String(length=20),
               type_=mysql.ENUM('PENDING', 'VISITOR', 'JANITOR', 'MODERATOR', 'ADMINISTRATOR'),
               existing_nullable=True)

    with op.batch_alter_table('app_settings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_app_settings_key'))

    op.drop_table('app_settings')
    # ### end Alembic commands ###
